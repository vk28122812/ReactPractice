{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Desktop/ReactPractice/RoutingApp/frontend/src/pages/NewEventPage.jsx\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const fd = await request.formData();\n  const eventData = {\n    title: fd.get('title'),\n    image: fd.get('image'),\n    date: fd.get('date'),\n    description: fd.get('description')\n  };\n  const response = await fetch(\"http://localhost:8080/event\", {\n    method: 'POST',\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw new Response({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","fd","formData","eventData","title","get","image","date","description","response","fetch","method","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["/home/vishal/Desktop/ReactPractice/RoutingApp/frontend/src/pages/NewEventPage.jsx"],"sourcesContent":["import React from 'react'\nimport EventForm from '../components/EventForm'\nimport { redirect } from 'react-router-dom';\n\nfunction NewEventPage() {\n  \n  return (\n    <EventForm/>\n  )\n}\n\nexport default NewEventPage;\n\nexport async function action({request, params}){\n  const fd = await request.formData();\n  \n  \n  const eventData = {\n    title: fd.get('title'),\n    image: fd.get('image'),\n    date: fd.get('date'),\n    description: fd.get('description')\n  };\n  const response = await fetch(\"http://localhost:8080/event\", {\n    method: 'POST',\n    body:  JSON.stringify(eventData)\n  });\n  if(!response.ok){\n    throw new Response({message:'Could not save event'}, {status:500 })\n  }\n  return redirect(\"/events\")\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAAA,EAAG;EAEtB,oBACED,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEhB;AAACC,EAAA,GALQL,YAAY;AAOrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC7C,MAAMC,EAAE,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAGnC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,EAAE,CAACI,GAAG,CAAC,OAAO,CAAC;IACtBC,KAAK,EAAEL,EAAE,CAACI,GAAG,CAAC,OAAO,CAAC;IACtBE,IAAI,EAAEN,EAAE,CAACI,GAAG,CAAC,MAAM,CAAC;IACpBG,WAAW,EAAEP,EAAE,CAACI,GAAG,CAAC,aAAa;EACnC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACX,SAAS;EACjC,CAAC,CAAC;EACF,IAAG,CAACM,QAAQ,CAACM,EAAE,EAAC;IACd,MAAM,IAAIC,QAAQ,CAAC;MAACC,OAAO,EAAC;IAAsB,CAAC,EAAE;MAACC,MAAM,EAAC;IAAI,CAAC,CAAC;EACrE;EACA,OAAO7B,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAQ,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}