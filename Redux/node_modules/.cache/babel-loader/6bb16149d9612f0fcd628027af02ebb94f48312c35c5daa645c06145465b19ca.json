{"ast":null,"code":"const {\n  createSlice,\n  configureStore\n} = require('@reduxjs/toolkit');\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    counter: 0\n  },\n  reducers: {\n    increment(state) {\n      state.counter += 1;\n    },\n    decrement(state) {\n      state.counter -= 1;\n    }\n  }\n});\nconst {\n  actions,\n  reducer\n} = counterSlice;\n\n// const counterReducer = (state = {counter: 0}, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     return state;\n// }\n// const store = redux.createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: reducer\n});\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\nstore.dispatch(actions.increment());\nstore.dispatch(actions.decrement());\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","require","counterSlice","name","initialState","counter","reducers","increment","state","decrement","actions","reducer","store","counterSubscriber","latestState","getState","console","log","subscribe","dispatch"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["const {createSlice, configureStore} = require('@reduxjs/toolkit')\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialState: {counter:0},\n    reducers: {\n        increment(state){\n            state.counter += 1;\n        },\n        decrement(state){\n            state.counter -= 1;\n        }\n    }\n})\nconst {actions, reducer} = counterSlice;\n\n// const counterReducer = (state = {counter: 0}, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     return state;\n// }\n// const store = redux.createStore(counterReducer);\n\nconst store = configureStore({\n    reducer: reducer\n})\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch(actions.increment());\nstore.dispatch(actions.decrement());\n\nexport default store;\n"],"mappings":"AAAA,MAAM;EAACA,WAAW;EAAEC;AAAc,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEjE,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAC,SAAS;EACdC,YAAY,EAAE;IAACC,OAAO,EAAC;EAAC,CAAC;EACzBC,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACH,OAAO,IAAI,CAAC;IACtB,CAAC;IACDI,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACH,OAAO,IAAI,CAAC;IACtB;EACJ;AACJ,CAAC,CAAC;AACF,MAAM;EAACK,OAAO;EAAEC;AAAO,CAAC,GAAGT,YAAY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMU,KAAK,GAAGZ,cAAc,CAAC;EACzBW,OAAO,EAAEA;AACb,CAAC,CAAC;AAEF,MAAME,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIF,KAAK,CAACG,QAAQ,CAAC,CAAC;EACnCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AAEDF,KAAK,CAACM,SAAS,CAACL,iBAAiB,CAAC;AAElCD,KAAK,CAACO,QAAQ,CAACT,OAAO,CAACH,SAAS,CAAC,CAAC,CAAC;AACnCK,KAAK,CAACO,QAAQ,CAACT,OAAO,CAACD,SAAS,CAAC,CAAC,CAAC;AAEnC,eAAeG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}