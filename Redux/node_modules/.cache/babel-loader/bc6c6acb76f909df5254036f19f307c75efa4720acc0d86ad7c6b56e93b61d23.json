{"ast":null,"code":"// import {createStore} from 'redux';\n// const initialState = {counter: 0, showCounter:true };\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\n// const counterSubscriber =  () => {\n//     let latestState  = store.getState();\n//     console.log(latestState);\n// }\n\n// store.subscribe(counterSubscriber);\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n// const store = configureStore({\n//     reducer: reducer\n// })\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n\nexport default store;","map":{"version":3,"names":["store"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux';\n// const initialState = {counter: 0, showCounter:true };\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\n\n// const counterSubscriber =  () => {\n//     let latestState  = store.getState();\n//     console.log(latestState);\n// }\n\n// store.subscribe(counterSubscriber);\n// const counterSlice = createSlice({\n    //     name:'counter',\n    //     initialState: {counter:0},\n    //     reducers: {\n//         increment(state){\n    //             state.counter += 1;\n    //         },\n    //         decrement(state){\n        //             state.counter -= 1;\n        //         }\n        //     }\n        // })\n        // const {actions, reducer} = counterSlice;\n        // const store = configureStore({\n            //     reducer: reducer\n            // })\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n\n\nexport default store;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACI;AACA;AACA;AACJ;AACI;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AAEZ;AACA;;AAGA;AACA;;AAGA,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}