{"ast":null,"code":"// import {createStore} from 'redux';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport authReducer from \"./auth\";\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  // console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","counterSlice","auth","authSlice","counterSubscriber","latestState","getState","subscribe","counterActions","actions","authActions"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux';\nimport {  configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport authReducer  from \"./auth\";\n\n\n\n\nconst store = configureStore({\n    reducer : {counter : counterSlice.reducer, auth: authSlice.reducer}\n})\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    // console.log(latestState);\n}\nstore.subscribe(counterSubscriber);\n\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"],"mappings":"AAAA;AACA,SAAUA,cAAc,QAAQ,kBAAkB;AAClD,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,WAAW,MAAO,QAAQ;AAKjC,MAAMC,KAAK,GAAGH,cAAc,CAAC;EACzBI,OAAO,EAAG;IAACC,OAAO,EAAGC,YAAY,CAACF,OAAO;IAAEG,IAAI,EAAEC,SAAS,CAACJ;EAAO;AACtE,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMK,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIP,KAAK,CAACQ,QAAQ,CAAC,CAAC;EACnC;AACJ,CAAC;AACDR,KAAK,CAACS,SAAS,CAACH,iBAAiB,CAAC;;AAGlC;AACA;;AAEA,OAAO,MAAMI,cAAc,GAAGP,YAAY,CAACQ,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGP,SAAS,CAACM,OAAO;AAC5C,eAAeX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}