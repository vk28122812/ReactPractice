{"ast":null,"code":"// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n// const store = configureStore({\n//     reducer: reducer\n// })\n\nconst counterReducer = (state = {\n  counter: 0\n}, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\nconst store = redux.createStore(counterReducer);\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n\nstore.dispatch({\n  type: 'increment'\n});\nstore.dispatch({\n  type: 'decrement'\n});\nexport default store;","map":{"version":3,"names":["counterReducer","state","counter","action","type","store","redux","createStore","counterSubscriber","latestState","getState","console","log","subscribe","dispatch"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n// const store = configureStore({\n//     reducer: reducer\n// })\n\nconst counterReducer = (state = {counter: 0}, action) => {\n    if(action.type==='increment'){\n        return {\n            counter: state.counter + 1\n        }\n    }\n    if(action.type==='decrement'){\n        return {\n            counter: state.counter - 1\n        }\n    }\n    return state;\n}\nconst store = redux.createStore(counterReducer);\n\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n\nstore.dispatch({type:'increment'});\nstore.dispatch({type:'decrement'});\n\nexport default store;\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,cAAc,GAAGA,CAACC,KAAK,GAAG;EAACC,OAAO,EAAE;AAAC,CAAC,EAAEC,MAAM,KAAK;EACrD,IAAGA,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACHF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAC7B,CAAC;EACL;EACA,IAAGC,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACHF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAC7B,CAAC;EACL;EACA,OAAOD,KAAK;AAChB,CAAC;AACD,MAAMI,KAAK,GAAGC,KAAK,CAACC,WAAW,CAACP,cAAc,CAAC;AAG/C,MAAMQ,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIJ,KAAK,CAACK,QAAQ,CAAC,CAAC;EACnCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AAEDJ,KAAK,CAACQ,SAAS,CAACL,iBAAiB,CAAC;;AAElC;AACA;;AAEAH,KAAK,CAACS,QAAQ,CAAC;EAACV,IAAI,EAAC;AAAW,CAAC,CAAC;AAClCC,KAAK,CAACS,QAAQ,CAAC;EAACV,IAAI,EAAC;AAAW,CAAC,CAAC;AAElC,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}