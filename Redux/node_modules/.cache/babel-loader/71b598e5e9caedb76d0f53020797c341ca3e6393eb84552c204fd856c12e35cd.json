{"ast":null,"code":"// import {createStore} from 'redux';\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload.amount;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  // console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","amount","toggle","store","reducer","counterSubscriber","latestState","getState","subscribe","counterActions","actions"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux';\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = {counter: 0, showCounter:true };\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state){\n            state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state,action){\n            state.counter += action.payload.amount\n        },\n        toggle(state){\n            state.showCounter = !state.showCounter\n        }\n    }\n});\n\n\n\n\n\nconst store = configureStore({\n    reducer : {counter : counterSlice.reducer}\n})\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    // console.log(latestState);\n}\nstore.subscribe(counterSubscriber);\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAC;AAAK,CAAC;AACpD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACN,OAAO,IAAIS,MAAM,CAACC,OAAO,CAACC,MAAM;IAC1C,CAAC;IACDC,MAAMA,CAACN,KAAK,EAAC;MACTA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAMF,MAAMY,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAG;IAACd,OAAO,EAAGE,YAAY,CAACY;EAAO;AAC7C,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIH,KAAK,CAACI,QAAQ,CAAC,CAAC;EACnC;AACJ,CAAC;AACDJ,KAAK,CAACK,SAAS,CAACH,iBAAiB,CAAC;;AAElC;AACA;;AAEA,OAAO,MAAMI,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAClD,eAAeP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}