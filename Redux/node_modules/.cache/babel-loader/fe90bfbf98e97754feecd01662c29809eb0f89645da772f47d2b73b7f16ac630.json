{"ast":null,"code":"const {\n  createSlice,\n  configureStore\n} = require('@reduxjs/toolkit');\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    counter: 0\n  },\n  reducers: {\n    increment(state) {\n      state.counter += 1;\n    },\n    decrement(state) {\n      state.counter -= 1;\n    }\n  }\n});\nconst {\n  actions,\n  reducers\n} = counter;\nconst counterReducer = (state = {\n  counter: 0\n}, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\nconst store = redux.createStore(counterReducer);\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\nstore.dispatch({\n  type: 'increment'\n});\nstore.dispatch({\n  type: 'decrement'\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","require","counterSlice","name","initialState","counter","reducers","increment","state","decrement","actions","counterReducer","action","type","store","redux","createStore","counterSubscriber","latestState","getState","console","log","subscribe","dispatch"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["const {createSlice, configureStore} = require('@reduxjs/toolkit')\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialState: {counter:0},\n    reducers: {\n        increment(state){\n            state.counter += 1;\n        },\n        decrement(state){\n            state.counter -= 1;\n        }\n    }\n})\nconst {actions, reducers} = counter\nconst counterReducer = (state = {counter: 0}, action) => {\n    if(action.type==='increment'){\n        return {\n            counter: state.counter + 1\n        }\n    }\n    if(action.type==='decrement'){\n        return {\n            counter: state.counter - 1\n        }\n    }\n    return state;\n}\n\nconst store = redux.createStore(counterReducer);\n\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({type:'increment'});\nstore.dispatch({type:'decrement'});\n\nexport default store;\n"],"mappings":"AAAA,MAAM;EAACA,WAAW;EAAEC;AAAc,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEjE,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAC,SAAS;EACdC,YAAY,EAAE;IAACC,OAAO,EAAC;EAAC,CAAC;EACzBC,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACH,OAAO,IAAI,CAAC;IACtB,CAAC;IACDI,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACH,OAAO,IAAI,CAAC;IACtB;EACJ;AACJ,CAAC,CAAC;AACF,MAAM;EAACK,OAAO;EAAEJ;AAAQ,CAAC,GAAGD,OAAO;AACnC,MAAMM,cAAc,GAAGA,CAACH,KAAK,GAAG;EAACH,OAAO,EAAE;AAAC,CAAC,EAAEO,MAAM,KAAK;EACrD,IAAGA,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACHR,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG;IAC7B,CAAC;EACL;EACA,IAAGO,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACHR,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG;IAC7B,CAAC;EACL;EACA,OAAOG,KAAK;AAChB,CAAC;AAED,MAAMM,KAAK,GAAGC,KAAK,CAACC,WAAW,CAACL,cAAc,CAAC;AAG/C,MAAMM,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIJ,KAAK,CAACK,QAAQ,CAAC,CAAC;EACnCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AAEDJ,KAAK,CAACQ,SAAS,CAACL,iBAAiB,CAAC;AAElCH,KAAK,CAACS,QAAQ,CAAC;EAACV,IAAI,EAAC;AAAW,CAAC,CAAC;AAClCC,KAAK,CAACS,QAAQ,CAAC;EAACV,IAAI,EAAC;AAAW,CAAC,CAAC;AAElC,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}