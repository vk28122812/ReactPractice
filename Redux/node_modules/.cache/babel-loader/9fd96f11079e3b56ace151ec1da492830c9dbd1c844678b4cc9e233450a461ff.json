{"ast":null,"code":"import { createStore } from 'redux';\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n// const store = configureStore({\n//     reducer: reducer\n// })\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n// const initialState = {counter: 0, showCounter:true };\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\nconst store = createStore(counterReducer);\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport default store;","map":{"version":3,"names":["createStore","store","counterReducer","counterSubscriber","latestState","getState","console","log","subscribe"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n// const store = configureStore({\n//     reducer: reducer\n// })\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n// const initialState = {counter: 0, showCounter:true };\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\nconst store = createStore(counterReducer);\n\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    console.log(latestState);\n}\nstore.subscribe(counterSubscriber);\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport default store;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGD,WAAW,CAACE,cAAc,CAAC;AAGzC,MAAMC,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIH,KAAK,CAACI,QAAQ,CAAC,CAAC;EACnCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AACDH,KAAK,CAACO,SAAS,CAACL,iBAAiB,CAAC;;AAElC;AACA;;AAEA,eAAeF,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}