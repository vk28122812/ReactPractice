{"ast":null,"code":"// import {createStore} from 'redux';\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst authInitialState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: authInitialState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  // console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","authInitialState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterSubscriber","latestState","getState","subscribe","counterActions","actions","authActions"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux';\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\n\n\nconst authInitialState = {\n    isAuthenticated: false\n}\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: authInitialState,\n    reducers: {\n        login(state){\n            state.isAuthenticated = true;\n        },\n        logout(state){\n            state.isAuthenticated = false;\n        }\n    }\n})\n\n\n\n\nconst store = configureStore({\n    reducer : {counter : counterSlice.reducer, auth: authSlice.reducer}\n})\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type ==='increase'){\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     if(action.type ==='toggle'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    // console.log(latestState);\n}\nstore.subscribe(counterSubscriber);\n\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAI9D,MAAMC,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AACD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAC;MACRA,KAAK,CAACN,eAAe,GAAG,IAAI;IAChC,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAC;MACTA,KAAK,CAACN,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAKF,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAG;IAACC,OAAO,EAAGC,YAAY,CAACF,OAAO;IAAEG,IAAI,EAAEX,SAAS,CAACQ;EAAO;AACtE,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMI,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIN,KAAK,CAACO,QAAQ,CAAC,CAAC;EACnC;AACJ,CAAC;AACDP,KAAK,CAACQ,SAAS,CAACH,iBAAiB,CAAC;;AAGlC;AACA;;AAEA,OAAO,MAAMI,cAAc,GAAGN,YAAY,CAACO,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGlB,SAAS,CAACiB,OAAO;AAC5C,eAAeV,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}