{"ast":null,"code":"import { createSlice, configureStore } from \"redux\";\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n\n// const counterReducer = (state = {counter: 0}, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     return state;\n// }\n// const store = redux.createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: reducer\n});\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\nstore.dispatch(actions.increment());\nstore.dispatch(actions.decrement());\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","store","reducer","counterSubscriber","latestState","getState","console","log","subscribe","dispatch","actions","increment","decrement"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["import { createSlice,configureStore } from \"redux\"\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n\n// const counterReducer = (state = {counter: 0}, action) => {\n//     if(action.type==='increment'){\n//         return {\n//             counter: state.counter + 1\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter - 1\n//         }\n//     }\n//     return state;\n// }\n// const store = redux.createStore(counterReducer);\n\nconst store = configureStore({\n    reducer: reducer\n})\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch(actions.increment());\nstore.dispatch(actions.decrement());\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAACC,cAAc,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGD,cAAc,CAAC;EACzBE,OAAO,EAAEA;AACb,CAAC,CAAC;AAEF,MAAMC,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIH,KAAK,CAACI,QAAQ,CAAC,CAAC;EACnCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AAEDH,KAAK,CAACO,SAAS,CAACL,iBAAiB,CAAC;AAElCF,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC;AACnCV,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC;AAEnC,eAAeX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}