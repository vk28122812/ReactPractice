{"ast":null,"code":"import { createStore } from 'redux';\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n// const store = configureStore({\n//     reducer: reducer\n// })\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      ...state,\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nconst counterSubscriber = () => {\n  let latestState = store.getState();\n  console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport default store;","map":{"version":3,"names":["createStore","initialState","counter","showCounter","counterReducer","state","action","type","amount","store","counterSubscriber","latestState","getState","console","log","subscribe"],"sources":["/home/vishal/Desktop/ReactPractice/Redux/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\n// const counterSlice = createSlice({\n//     name:'counter',\n//     initialState: {counter:0},\n//     reducers: {\n//         increment(state){\n//             state.counter += 1;\n//         },\n//         decrement(state){\n//             state.counter -= 1;\n//         }\n//     }\n// })\n// const {actions, reducer} = counterSlice;\n// const store = configureStore({\n//     reducer: reducer\n// })\nconst initialState = {counter: 0, showCounter:true };\nconst counterReducer = (state = initialState, action) => {\n    if(action.type==='increment'){\n        return {\n            ...state,\n            counter: state.counter + 1\n        }\n    }\n    if(action.type ==='increase'){\n        return {\n            counter: state.counter + action.amount\n        }\n    }\n    if(action.type==='decrement'){\n        return {\n            counter: state.counter - 1\n        }\n    }\n    return state;\n}\nconst store = createStore(counterReducer);\n\n\nconst counterSubscriber =  () => {\n    let latestState  = store.getState();\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\n// store.dispatch(actions.increment());\n// store.dispatch(actions.decrement());\n\n// store.dispatch({type:'increment'});\n// store.dispatch({type:'decrement'});\n\nexport default store;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAC;AAAK,CAAC;AACpD,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACrD,IAAGA,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACH,GAAGF,KAAK;MACRH,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG;IAC7B,CAAC;EACL;EACA,IAAGI,MAAM,CAACC,IAAI,KAAI,UAAU,EAAC;IACzB,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACE;IACpC,CAAC;EACL;EACA,IAAGF,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG;IAC7B,CAAC;EACL;EACA,OAAOG,KAAK;AAChB,CAAC;AACD,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAc,CAAC;AAGzC,MAAMM,iBAAiB,GAAIA,CAAA,KAAM;EAC7B,IAAIC,WAAW,GAAIF,KAAK,CAACG,QAAQ,CAAC,CAAC;EACnCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AAEDF,KAAK,CAACM,SAAS,CAACL,iBAAiB,CAAC;;AAElC;AACA;;AAEA;AACA;;AAEA,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}