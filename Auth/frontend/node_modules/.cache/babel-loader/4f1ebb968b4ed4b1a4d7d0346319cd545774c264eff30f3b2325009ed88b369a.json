{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Desktop/ReactPractice/Auth/frontend/src/pages/Authentication.js\";\nimport { redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw new Response({\n      message: 'Unsupported mode.'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  console.log(authData);\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw new Response({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","Response","message","status","data","formData","authData","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","ok","$RefreshReg$"],"sources":["/home/vishal/Desktop/ReactPractice/Auth/frontend/src/pages/Authentication.js"],"sourcesContent":["import { redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}){\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if(mode !== 'login' && mode !== 'signup'){\n    throw new Response({message: 'Unsupported mode.'}, {status:422});\n  }\n  const data = await request.formData();\n  const authData  = {\n    email: data.get('email'),\n    password: data.get('password')\n  }\n\n  console.log(authData)\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: 'POST',\n    headers: {\n      'content-type':'application/json'\n    },\n    body: JSON.stringify(authData)\n  })\n  if(response.status === 422 || response.status === 401){\n    return response;\n  }\n  if(!response.ok){\n    throw new Response({message:'Could not authenticate user.'}, {status:500})\n  }\n  return redirect('/');\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACrC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAChD,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACvC,MAAM,IAAIE,QAAQ,CAAC;MAACC,OAAO,EAAE;IAAmB,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAClE;EACA,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAI;IAChBC,KAAK,EAAEH,IAAI,CAACJ,GAAG,CAAC,OAAO,CAAC;IACxBQ,QAAQ,EAAEJ,IAAI,CAACJ,GAAG,CAAC,UAAU;EAC/B,CAAC;EAEDS,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGb,IAAI,EAAE;IAC5Dc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;EAC/B,CAAC,CAAC;EACF,IAAGK,QAAQ,CAACR,MAAM,KAAK,GAAG,IAAIQ,QAAQ,CAACR,MAAM,KAAK,GAAG,EAAC;IACpD,OAAOQ,QAAQ;EACjB;EACA,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAC;IACd,MAAM,IAAIjB,QAAQ,CAAC;MAACC,OAAO,EAAC;IAA8B,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC5E;EACA,OAAOnB,QAAQ,CAAC,GAAG,CAAC;AACtB;AAAC,IAAAS,EAAA;AAAA0B,YAAA,CAAA1B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}