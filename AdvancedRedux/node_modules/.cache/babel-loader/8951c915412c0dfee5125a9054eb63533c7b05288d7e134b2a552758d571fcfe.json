{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { act } from \"react\";\nconst cartInitialState = {\n  hidden: false,\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: cartInitialState,\n  reducers: {\n    toggle(state) {\n      state.hidden = !state.hidden;\n    },\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.totalPrice += newItem.price;\n      }\n      state.totalQuantity += 1;\n      state.changed = true;\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity -= 1;\n        existingItem.totalPrice -= existingItem.price;\n      }\n      state.totalQuantity -= 1;\n      state.changed = true;\n    },\n    replaceCart(state, action) {\n      log;\n      state.cart.totalQuantity = action.payload.totalQuantity;\n      state.cart.items = action.payload.items;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","act","cartInitialState","hidden","items","totalQuantity","changed","cartSlice","name","initialState","reducers","toggle","state","addItem","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItem","filter","replaceCart","log","cart","cartActions","actions","reducer"],"sources":["/home/vishal/Desktop/AdvancedRedux/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport { act } from \"react\";\n\nconst cartInitialState = {\n    hidden : false,\n    items: [],\n    totalQuantity: 0,\n    changed: false\n}\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState: cartInitialState,\n    reducers: {\n        toggle(state){\n            state.hidden = !state.hidden           \n        },\n        addItem(state,action){\n            const newItem = action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id);\n            if(!existingItem){\n                state.items.push({id:newItem.id,price:newItem.price,quantity:1,totalPrice:newItem.price,name:newItem.title})\n            }else{\n                existingItem.quantity += 1;\n                existingItem.totalPrice += newItem.price;\n            }\n            state.totalQuantity += 1;\n            state.changed = true;\n        },\n\n        removeItem(state,action){\n            const id = action.payload;\n            const existingItem = state.items.find(item => item.id === id);\n            if(existingItem.quantity === 1){\n                state.items = state.items.filter( item => item.id !== id);\n            }else{\n                existingItem.quantity -= 1;\n                existingItem.totalPrice -= existingItem.price;\n            }\n            state.totalQuantity -= 1;\n            state.changed = true;\n        },\n        replaceCart(state,action ){     \n            log\n            state.cart.totalQuantity = action.payload.totalQuantity;\n            state.cart.items = action.payload.items\n        }\n    }\n})\n\nexport const cartActions =  cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,OAAO;AAE3B,MAAMC,gBAAgB,GAAG;EACrBC,MAAM,EAAG,KAAK;EACdC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC1BQ,IAAI,EAAC,MAAM;EACXC,YAAY,EAAEP,gBAAgB;EAC9BQ,QAAQ,EAAE;IACNC,MAAMA,CAACC,KAAK,EAAC;MACTA,KAAK,CAACT,MAAM,GAAG,CAACS,KAAK,CAACT,MAAM;IAChC,CAAC;IACDU,OAAOA,CAACD,KAAK,EAACE,MAAM,EAAC;MACjB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGL,KAAK,CAACR,KAAK,CAACc,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrE,IAAG,CAACH,YAAY,EAAC;QACbL,KAAK,CAACR,KAAK,CAACiB,IAAI,CAAC;UAACD,EAAE,EAACL,OAAO,CAACK,EAAE;UAACE,KAAK,EAACP,OAAO,CAACO,KAAK;UAACC,QAAQ,EAAC,CAAC;UAACC,UAAU,EAACT,OAAO,CAACO,KAAK;UAACd,IAAI,EAACO,OAAO,CAACU;QAAK,CAAC,CAAC;MAChH,CAAC,MAAI;QACDR,YAAY,CAACM,QAAQ,IAAI,CAAC;QAC1BN,YAAY,CAACO,UAAU,IAAIT,OAAO,CAACO,KAAK;MAC5C;MACAV,KAAK,CAACP,aAAa,IAAI,CAAC;MACxBO,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC;IAEDoB,UAAUA,CAACd,KAAK,EAACE,MAAM,EAAC;MACpB,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGL,KAAK,CAACR,KAAK,CAACc,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAGH,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAC;QAC3BX,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACuB,MAAM,CAAER,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7D,CAAC,MAAI;QACDH,YAAY,CAACM,QAAQ,IAAI,CAAC;QAC1BN,YAAY,CAACO,UAAU,IAAIP,YAAY,CAACK,KAAK;MACjD;MACAV,KAAK,CAACP,aAAa,IAAI,CAAC;MACxBO,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC;IACDsB,WAAWA,CAAChB,KAAK,EAACE,MAAM,EAAE;MACtBe,GAAG;MACHjB,KAAK,CAACkB,IAAI,CAACzB,aAAa,GAAGS,MAAM,CAACE,OAAO,CAACX,aAAa;MACvDO,KAAK,CAACkB,IAAI,CAAC1B,KAAK,GAAGU,MAAM,CAACE,OAAO,CAACZ,KAAK;IAC3C;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM2B,WAAW,GAAIxB,SAAS,CAACyB,OAAO;AAC7C,eAAezB,SAAS,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}